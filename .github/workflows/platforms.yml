# Availability-related actions.
name: Platforms

on:
  push:
    paths:
      - "**.rs"
      - "**.yaml"
      - "**.yml"
      - "**.toml"
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * 0" # Sunday

jobs:
  # Depends on all actions that are required for a "successful" CI run.
  paltforms:
    name: Platforms
    strategy:
      matrix:
        include:
          - os: windows-latest
            RUSTC_TARGET: x86_64-pc-windows-msvc
          - os: macos-latest
            RUSTC_TARGET: x86_64-apple-darwin
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-ci-${{ hashFiles('**/Cargo.lock') }}

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --target=${{ matrix.RUSTC_TARGET }} --workspace --exclude sentinel-envoy-module --exclude ebpf-probes --exclude ebpf-userspace

      - name: Unit Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target=${{ matrix.RUSTC_TARGET }} --workspace --exclude sentinel-envoy-module  --exclude ebpf-probes --exclude ebpf-userspace -- --nocapture
      - name: Ignored Unit Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target=${{ matrix.RUSTC_TARGET }} --workspace --exclude sentinel-envoy-module  --exclude ebpf-probes --exclude ebpf-userspace -- --ignored --test-threads=1 --nocapture

    wasm:
      name: WebAssembly
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - uses: actions-rs/toolchain@v1
          with:
            toolchain: stable
            target: wasm32-unknown-unknown
        - uses: actions/cache@v2
          with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-wasm-${{ hashFiles('**/Cargo.lock') }}
        - name: Build
          uses: actions-rs/cargo@v1
          with:
            command: build
            args: --target=wasm32-unknown-unknown